// Code generated by mockery v2.10.0. DO NOT EDIT.

package user

import (
	context "context"
	orm "gobase/api/internal/repository/orm"

	mock "github.com/stretchr/testify/mock"
)

// MockRepository is an autogenerated mock type for the Repository type
type MockRepository struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: _a0, _a1
func (_m *MockRepository) CreateUser(_a0 context.Context, _a1 string) (int, error) {
	ret := _m.Called(_a0, _a1)

	var r0 int
	if rf, ok := ret.Get(0).(func(context.Context, string) int); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindUserByEmail provides a mock function with given fields: _a0, _a1
func (_m *MockRepository) FindUserByEmail(_a0 context.Context, _a1 string) (orm.User, error) {
	ret := _m.Called(_a0, _a1)

	var r0 orm.User
	if rf, ok := ret.Get(0).(func(context.Context, string) orm.User); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(orm.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
